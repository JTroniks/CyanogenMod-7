Terminals unused in grammar

   SUBSTR
   SUPERSTR
   BAD


Grammar

    0 $accept: input $end

    1 input: expr

    2 expr: STRING
    3     | '(' expr ')'
    4     | expr ';'
    5     | expr ';' expr
    6     | error ';' expr
    7     | expr '+' expr
    8     | expr EQ expr
    9     | expr NE expr
   10     | expr AND expr
   11     | expr OR expr
   12     | '!' expr
   13     | IF expr THEN expr ENDIF
   14     | IF expr THEN expr ELSE expr ENDIF
   15     | STRING '(' arglist ')'

   16 arglist: /* empty */
   17        | expr
   18        | arglist ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 12
'(' (40) 3 15
')' (41) 3 15
'+' (43) 7
',' (44) 18
';' (59) 4 5 6
error (256) 6
AND (258) 10
OR (259) 11
SUBSTR (260)
SUPERSTR (261)
EQ (262) 8
NE (263) 9
IF (264) 13 14
THEN (265) 13 14
ELSE (266) 14
ENDIF (267) 13 14
STRING (268) 2 15
BAD (269)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
input (22)
    on left: 1, on right: 0
expr (23)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1 3 4 5 6
    7 8 9 10 11 12 13 14 17 18
arglist (24)
    on left: 16 17 18, on right: 15 18


state 0

    0 $accept: . input $end

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    input  go to state 6
    expr   go to state 7


state 1

    6 expr: error . ';' expr

    ';'  shift, and go to state 8


state 2

   13 expr: IF . expr THEN expr ENDIF
   14     | IF . expr THEN expr ELSE expr ENDIF

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 9


state 3

    2 expr: STRING .
   15     | STRING . '(' arglist ')'

    '('  shift, and go to state 10

    $default  reduce using rule 2 (expr)


state 4

   12 expr: '!' . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 11


state 5

    3 expr: '(' . expr ')'

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 12


state 6

    0 $accept: input . $end

    $end  shift, and go to state 13


state 7

    1 input: expr .
    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    ';'  shift, and go to state 18
    '+'  shift, and go to state 19

    $default  reduce using rule 1 (input)


state 8

    6 expr: error ';' . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 20


state 9

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   13     | IF expr . THEN expr ENDIF
   14     | IF expr . THEN expr ELSE expr ENDIF

    AND   shift, and go to state 14
    OR    shift, and go to state 15
    EQ    shift, and go to state 16
    NE    shift, and go to state 17
    THEN  shift, and go to state 21
    ';'   shift, and go to state 18
    '+'   shift, and go to state 19


state 10

   15 expr: STRING '(' . arglist ')'

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    ','  reduce using rule 16 (arglist)
    ')'  reduce using rule 16 (arglist)

    expr     go to state 22
    arglist  go to state 23


state 11

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | '!' expr .

    $default  reduce using rule 12 (expr)


state 12

    3 expr: '(' expr . ')'
    4     | expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    ';'  shift, and go to state 18
    '+'  shift, and go to state 19
    ')'  shift, and go to state 24


state 13

    0 $accept: input $end .

    $default  accept


state 14

   10 expr: expr AND . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 25


state 15

   11 expr: expr OR . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 26


state 16

    8 expr: expr EQ . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 27


state 17

    9 expr: expr NE . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 28


state 18

    4 expr: expr ';' .
    5     | expr ';' . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    $end   reduce using rule 4 (expr)
    AND    reduce using rule 4 (expr)
    OR     reduce using rule 4 (expr)
    EQ     reduce using rule 4 (expr)
    NE     reduce using rule 4 (expr)
    THEN   reduce using rule 4 (expr)
    ELSE   reduce using rule 4 (expr)
    ENDIF  reduce using rule 4 (expr)
    ';'    reduce using rule 4 (expr)
    ','    reduce using rule 4 (expr)
    '+'    reduce using rule 4 (expr)
    ')'    reduce using rule 4 (expr)

    expr  go to state 29


state 19

    7 expr: expr '+' . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 30


state 20

    4 expr: expr . ';'
    5     | expr . ';' expr
    6     | error ';' expr .
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    '+'  shift, and go to state 19

    $default  reduce using rule 6 (expr)


state 21

   13 expr: IF expr THEN . expr ENDIF
   14     | IF expr THEN . expr ELSE expr ENDIF

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 31


state 22

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   17 arglist: expr .

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    ';'  shift, and go to state 18
    '+'  shift, and go to state 19

    $default  reduce using rule 17 (arglist)


state 23

   15 expr: STRING '(' arglist . ')'
   18 arglist: arglist . ',' expr

    ','  shift, and go to state 32
    ')'  shift, and go to state 33


state 24

    3 expr: '(' expr ')' .

    $default  reduce using rule 3 (expr)


state 25

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   10     | expr AND expr .
   11     | expr . OR expr

    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    '+'  shift, and go to state 19

    $default  reduce using rule 10 (expr)


state 26

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   11     | expr OR expr .

    AND  shift, and go to state 14
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    '+'  shift, and go to state 19

    $default  reduce using rule 11 (expr)


state 27

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    8     | expr EQ expr .
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    '+'  shift, and go to state 19

    $default  reduce using rule 8 (expr)


state 28

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
    9     | expr NE expr .
   10     | expr . AND expr
   11     | expr . OR expr

    '+'  shift, and go to state 19

    $default  reduce using rule 9 (expr)


state 29

    4 expr: expr . ';'
    5     | expr . ';' expr
    5     | expr ';' expr .
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    '+'  shift, and go to state 19

    $default  reduce using rule 5 (expr)


state 30

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    7     | expr '+' expr .
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr

    $default  reduce using rule 7 (expr)


state 31

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   13     | IF expr THEN expr . ENDIF
   14     | IF expr THEN expr . ELSE expr ENDIF

    AND    shift, and go to state 14
    OR     shift, and go to state 15
    EQ     shift, and go to state 16
    NE     shift, and go to state 17
    ELSE   shift, and go to state 34
    ENDIF  shift, and go to state 35
    ';'    shift, and go to state 18
    '+'    shift, and go to state 19


state 32

   18 arglist: arglist ',' . expr

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 36


state 33

   15 expr: STRING '(' arglist ')' .

    $default  reduce using rule 15 (expr)


state 34

   14 expr: IF expr THEN expr ELSE . expr ENDIF

    error   shift, and go to state 1
    IF      shift, and go to state 2
    STRING  shift, and go to state 3
    '!'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 37


state 35

   13 expr: IF expr THEN expr ENDIF .

    $default  reduce using rule 13 (expr)


state 36

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   18 arglist: arglist ',' expr .

    AND  shift, and go to state 14
    OR   shift, and go to state 15
    EQ   shift, and go to state 16
    NE   shift, and go to state 17
    ';'  shift, and go to state 18
    '+'  shift, and go to state 19

    $default  reduce using rule 18 (arglist)


state 37

    4 expr: expr . ';'
    5     | expr . ';' expr
    7     | expr . '+' expr
    8     | expr . EQ expr
    9     | expr . NE expr
   10     | expr . AND expr
   11     | expr . OR expr
   14     | IF expr THEN expr ELSE expr . ENDIF

    AND    shift, and go to state 14
    OR     shift, and go to state 15
    EQ     shift, and go to state 16
    NE     shift, and go to state 17
    ENDIF  shift, and go to state 38
    ';'    shift, and go to state 18
    '+'    shift, and go to state 19


state 38

   14 expr: IF expr THEN expr ELSE expr ENDIF .

    $default  reduce using rule 14 (expr)
