/*
 * Copyright (C) 2003 Lars Knoll (knoll@kde.org)
 *
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

/* This file is mostly data generated by flex. Unfortunately flex
   can't handle 16bit strings directly, so we just copy the part of
   the code we need and modify it to our needs.

   Most of the defines below are to make sure we can easily use the
   flex generated code, using as little editing as possible.

   The flex syntax to generate the lexer are more or less directly
   copied from the CSS2.1 specs, with some fixes for comments and
   the important symbol.

   To regenerate, run flex on tokenizer.flex. After this, copy the
   data tables and the YY_DECL method over to this file. Remove the
   init code from YY_DECL and change the YY_END_OF_BUFFER to only call
   yyterminate().

*/

// --------- begin generated code -------------------


#include "CSSGrammar.h"

#define INITIAL 0
#define mediaquery 1
#define forkeyword 2

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t;
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */
#define YY_NUM_RULES 69
#define YY_END_OF_BUFFER 70
static yyconst short int yy_accept[481] =
    {   0,
        0,    0,    0,    0,    0,    0,   70,   68,    2,    2,
       68,   68,   68,   68,   68,   68,   68,   68,   68,   57,
       68,   68,   68,   68,   15,   15,   15,   68,   68,   67,
       15,   15,   15,   66,   15,    2,    0,    0,    0,   14,
        0,    0,    0,    0,   18,   18,    8,    0,    0,    9,
        0,    0,    0,   15,   15,   15,   58,    0,   56,    0,
        0,   57,    0,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   16,   55,   55,   52,   55,    0,    0,
        0,   35,   35,   35,   35,   35,   35,   35,   15,   15,
        7,   63,   15,    0,    0,   15,   15,    0,   15,    6,

        5,   15,   15,   15,   15,    0,    0,    0,   14,    0,
        0,    0,   18,   18,   18,    0,   18,    0,    0,   14,
        0,    0,    4,   16,   15,    0,    0,   55,   55,   55,
        0,   55,   42,   55,   37,   40,   55,   53,   44,   55,
       43,   51,   55,   46,   45,   41,   55,   55,   55,    0,
       35,   35,   35,   35,    0,   35,   35,   35,   35,   35,
       35,   15,   15,   15,   16,   15,   15,   64,   64,   15,
       12,   10,   15,   13,    0,    0,    0,   17,   18,   18,
       18,   17,    0,    0,   15,    0,    1,   55,   55,   55,
       55,   47,   55,   54,   16,   48,   38,   55,    3,   35,

       35,   35,   35,   35,   35,   35,   35,   35,   35,   15,
       15,   59,    0,   64,   64,   64,   63,   11,    0,    0,
        0,   18,   18,   18,    0,   15,    0,    0,   55,   55,
       55,   49,   50,   35,   35,   35,   35,   35,   35,   35,
       35,   20,   15,   15,   65,   64,   64,   64,   64,    0,
        0,    0,    0,   61,    0,    0,    0,    0,   18,   18,
       18,    0,   15,   55,   55,   39,   35,   35,   35,   35,
       35,   35,   21,   35,   15,   15,   65,   64,   64,   64,
       64,   64,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   61,    0,    0,    0,    0,   17,   18,   18,   17,

        0,   15,   55,   55,   35,   35,   35,   35,   35,   19,
       35,   15,   15,   65,   64,   64,   64,   64,   64,   64,
        0,   60,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   18,   18,    0,   15,   55,
       55,   35,   35,   35,   23,   35,   35,   15,   65,   64,
       64,   64,   64,   64,   64,   64,    0,   60,    0,    0,
        0,   60,    0,    0,    0,    0,   18,   15,   55,   35,
       35,   35,   35,   65,    0,    0,    0,   36,   15,   35,
       35,   35,   35,   35,   35,   22,   24,   65,    0,    0,
        0,   15,   35,   35,   35,   35,   35,   35,    0,    0,

        0,   63,   35,   35,   35,   35,   35,   35,   35,   35,
        0,    0,    0,    0,    0,    0,   35,   35,   35,   35,
       25,   35,   35,   35,    0,    0,    0,   62,    0,    0,
       26,   35,   35,   35,   35,   27,   35,    0,    0,    0,
        0,   31,   35,   35,   35,   35,    0,    0,    0,   35,
       35,   35,   35,    0,    0,   35,   35,   29,   35,    0,
        0,   35,   33,   35,   30,    0,    0,   35,   28,   35,
        0,   35,   35,   35,   35,   34,   35,   35,   32,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   12,   18,   19,   20,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   12,   22,   23,
       24,   25,   26,   27,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
       12,   28,   12,   29,   30,   12,   31,   32,   33,   34,

       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
       55,   56,   57,   58,   12,   59,    1,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,

       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60
    } ;

static yyconst int yy_meta[61] =
    {   0,
        1,    2,    3,    3,    3,    4,    5,    5,    5,    5,
        5,    5,    5,    6,    7,    5,    5,    8,    5,    5,
        9,    5,    5,    5,    5,   10,    5,   11,    5,   11,
       12,   12,   12,   12,   12,   12,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,    5,    5,    5,   11
    } ;

static yyconst short int yy_base[519] =
    {   0,
        0,    0,   39,   41, 1597, 1596, 1631, 2390,   62,   71,
       76,   61,   69, 1606,   78, 1598,   89, 1600, 1603,  132,
     1611,   91,  123, 1593,   80,  104,   97, 1592, 1591, 2390,
       85,  176,  175, 2390,  177,  193,  204, 1571,   84, 2390,
      242,  110,  180,  196, 1573,  205, 2390,  113,  277, 2390,
     1575,   72,  221,  133,  206,  234,  181, 1577, 1574, 1547,
     1553,    0,  268,  118, 1545,  221,   60,  240,   92,  230,
       95,  223,  244,  267,  238,  286, 1544,  268, 1553,  279,
      294, 1542,  278,  190,  290,  232,  292,  303,  308,  335,
     2390, 2390,  329,  341, 1548,  330,  331,  357,  366, 2390,

     2390,  351,  332,  370,  372, 1520,  393,  327,  379,  420,
      455,  382, 1537,  490, 1536,  398,  446,  433,  382,  414,
      525,  560, 2390,  330,  436, 1547,  334, 1534,  595, 1522,
      481,  314, 1521,   34, 1512, 1506,  371, 1503, 1502,  296,
     1501, 1500,  376, 1487, 1486, 1472,  231,  419,  417, 1480,
      409, 1468,  630, 1467,  516,  378,  108,  438,  377,  442,
      412,  551,  490,  665, 1473,  589,  491,  417, 1465,  492,
      526,  527,  552,  561, 1435,  562,  621,  656,  672, 1429,
      707,  698,  591,  714,  597, 1433, 2390,  723, 1417,  758,
      472, 1415,  441, 1414,  480, 1411, 1402,  574, 2390,  471,

      749, 1390,  793,  592,  482,  577,  325,  507,  508,  784,
      800, 2390,  809,  550, 1389, 1355,  844,  631, 1325,  830,
      846,  852,  868,  874,  890,  646, 1349,  551,  896,  912,
      578, 1302, 1233,  596,  918,  934,  645,  516,  647,  443,
      653, 1231,  940,  956,  962,  551, 1220, 1148, 1130,  997,
     1011,  708,  709, 2390, 1038, 1090,  997, 1029, 1046, 1054,
     1062, 1070,  737, 1078, 1086, 1104,  470, 1094, 1102,  580,
      611,  622, 1096,  725, 1110, 1118, 1126,  623, 1090, 1082,
     1074, 1066,  771,  744,  798, 1161,  794, 1196, 1175, 1208,
     1235, 1249, 1276, 1311, 1027, 1235, 2390, 1267, 1302, 1029,

     1319,  840, 1327, 1335,  738, 1343, 1351,  810,  581, 1017,
      615, 1386, 1372, 1388,  658,  983,  909,  871,  867,  786,
     1032, 2390,  866,  847, 1423, 1450, 1485, 1205,  795, 1431,
     1520, 1555, 1429,  767, 1476,  910, 1511, 1546,  906,  976,
     1563,  696, 1290, 1571,  741,  546,  650, 1606, 1592,  750,
     2390, 2390, 2390, 2390, 2390, 2390, 1464,  848,  862, 1608,
     1643,  928,  929, 1629, 1645,  671, 1471,  992, 1499, 1641,
     1533,  690,  692, 1664, 1670, 1686, 1692, 2390, 1156,  863,
     1020, 1021,  868, 1120,  651,  652,  586, 2390, 1708, 1714,
     1730,  825, 1139,  782,  505,  979,  980, 1143, 1736, 1752,

     1758, 1793, 1026,  687, 1048,  739, 1187, 1191,  908, 1148,
     1781, 1797, 1820, 1392, 1818, 1840,  843,  983,  912,  778,
      585, 1140, 1207, 1174, 1854, 1881, 1270, 2390, 1860, 1858,
      550, 1230, 1216,  890,  934,  517,  616, 1895, 1897, 1932,
     1959,  469, 1206,  935, 1277, 1178, 1918, 1940, 1938, 1255,
     1292, 1197, 1293, 1965, 1981, 1383, 1258,  445,  936, 1987,
     2003, 1301,  444, 1232, 1313, 2009, 2025, 1329,  411,  689,
     2031, 1371, 1412, 1413, 1384,  410, 1374, 1158,  263, 2390,
     2066, 2071, 2082, 2087, 2092, 2101, 2108, 2119, 2128, 2133,
     2144, 2156, 2158, 2167, 2172, 2181, 2186, 2195, 2204, 2216,

     2225, 2234, 2239, 2251, 2256, 2267, 2272, 2283, 2294, 2305,
     2310, 2321, 2332, 2337, 2348, 2357, 2368, 2377
    } ;

static yyconst short int yy_def[519] =
    {   0,
      480,    1,    1,    1,    1,    1,  480,  480,  480,  480,
      480,  481,  482,  480,  483,  480,  484,  480,  480,  480,
      480,  485,  486,  480,  487,  487,  487,  480,  480,  480,
      487,  487,  487,  480,  487,  480,  480,  480,  481,  480,
      488,  482,  480,  489,  490,  490,  480,  483,  491,  480,
      480,  480,  486,  487,  487,  487,   20,  492,  480,  493,
      480,   20,  494,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  480,  485,
      496,  497,  497,  497,  497,  497,  497,  497,  487,  487,
      480,  480,  487,  498,  480,  487,  487,  480,  487,  480,

      480,  487,  487,  487,  487,  480,  481,  481,  481,  481,
      488,  480,  490,   46,  490,  499,   46,  483,  483,  483,
      483,  491,  480,  480,  487,  492,  500,  495,  495,  495,
      501,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  480,
      497,  497,  497,  497,  502,  497,  497,  497,  497,  497,
      497,   90,  487,   90,  480,  487,  487,  503,  480,  487,
      487,  487,  487,  487,  480,  481,  110,  480,  114,  490,
      114,   46,  483,  121,  487,  504,  480,  129,  495,  129,
      495,  495,  495,  495,  495,  495,  495,  495,  480,  497,

      153,  497,  153,  497,  497,  497,  497,  497,  497,   90,
      164,  480,  480,  505,  480,  480,  506,  487,  480,  110,
      480,  114,  181,   46,  121,  487,  504,  500,  129,  190,
      495,  495,  495,  497,  153,  203,  497,  497,  497,  497,
      497,  497,   90,  164,  480,  507,  480,  480,  480,  506,
      506,  508,  509,  480,  510,  480,  110,  480,  114,  181,
       46,  121,  487,  129,  190,  495,  497,  153,  203,  497,
      497,  497,  497,  497,   90,  164,  480,  511,  480,  480,
      480,  480,  480,  508,  480,  512,  509,  513,  506,  506,
      506,  506,  506,  510,  480,  110,  480,  114,  181,  490,

      121,  487,  129,  190,  497,  153,  203,  497,  497,  497,
      497,  487,  164,  480,  514,  480,  480,  480,  480,  480,
      480,  480,  508,  508,  508,  508,  512,  509,  509,  509,
      509,  513,  293,  480,  110,  490,  181,  121,  487,  495,
      190,  497,  497,  203,  497,  497,  497,  487,  480,  480,
      480,  480,  480,  480,  480,  480,  508,  508,  508,  326,
      509,  509,  509,  331,  293,  480,  490,  487,  495,  497,
      497,  497,  497,  480,  326,  331,  293,  480,  487,  497,
      497,  497,  497,  497,  497,  497,  497,  480,  326,  331,
      293,  487,  497,  497,  497,  497,  497,  497,  326,  331,

      293,  515,  497,  497,  497,  497,  497,  497,  497,  497,
      326,  331,  515,  413,  516,  517,  497,  497,  497,  497,
      497,  497,  497,  497,  517,  517,  480,  480,  517,  518,
      497,  497,  497,  497,  497,  497,  497,  517,  426,  517,
      426,  497,  497,  497,  497,  497,  426,  517,  441,  497,
      497,  497,  497,  426,  441,  497,  497,  497,  497,  426,
      441,  497,  497,  497,  497,  426,  441,  497,  497,  497,
      441,  497,  497,  497,  497,  497,  497,  497,  497,    0,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,

      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480
    } ;

static yyconst short int yy_nxt[2451] =
    {   0,
        8,    9,   10,    9,    9,    9,   11,   12,   13,   14,
        8,    8,   15,    8,    8,   16,    8,   17,   18,   19,
       20,    8,   21,    8,    8,    8,   22,   23,   24,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   26,   25,   25,   25,   25,   25,   25,
       27,   25,   25,   25,   25,   25,    8,   28,   29,   25,
       30,  131,   30,   36,   36,   36,   36,   36,   40,   31,
      192,   31,   36,   36,   36,   36,   36,   37,   37,   37,
       37,   37,   32,   33,   32,   33,   42,  131,   41,   43,
       40,   40,   52,   92,  134,   34,   44,   34,   92,   46,

       46,   46,   46,   46,   46,   49,   51,   94,   80,   52,
       92,   41,   94,   98,   38,  124,   53,   92,   81,  131,
       95,   96,  131,   83,   94,   40,   84,  480,  102,   85,
      480,   94,   55,   86,   87,  155,   88,   44,  139,  137,
       49,   56,   59,   90,   99,  131,   92,  132,   97,   60,
       61,  205,   62,   90,   90,   90,   90,   90,   90,   63,
       94,   64,   65,   65,   66,   67,   68,   65,   69,   70,
       71,   65,   72,   65,   73,   74,   65,   75,   65,   76,
       77,   78,   65,   65,   65,   65,   65,   65,   92,   92,
       92,   65,   95,   96,   36,   36,   36,   36,   36,  480,

      112,   57,   94,   94,   94,   37,   37,   37,   37,   37,
      112,  112,  112,  112,  112,  112,  114,  155,  104,   92,
      103,  105,   95,   96,   65,  117,  114,  114,  114,  114,
      114,  114,  116,   94,  157,  117,  117,  117,  117,  117,
      117,   90,   38,   39,   39,   39,  107,   92,  131,  109,
      131,   90,   90,   90,   90,   90,   90,  131,  131,  155,
      140,   94,  110,  133,  196,  131,  159,  131,  125,  111,
      144,  131,  110,  110,  110,  110,  110,  110,   48,   48,
       48,  118,  135,   95,  143,  138,  141,  145,  129,  120,
      155,  146,  142,  136,  131,  131,  480,  121,  129,  129,

      129,  129,  129,  129,  122,  155,   81,  121,  121,  121,
      121,  121,  121,  131,  153,  156,  147,  155,  149,  155,
      148,   92,  160,  131,  153,  153,  153,  153,  153,  153,
      155,  151,  158,  161,   40,   94,   89,   89,   89,   89,
       89,  131,   92,   92,   92,   92,   95,   95,   92,  127,
      166,  194,  155,  187,   41,  162,   94,   94,   94,   94,
      191,  164,   94,  240,   92,  162,  162,  162,  162,  162,
      162,  164,  164,  164,  164,  164,  164,  168,   94,   92,
      167,  172,  169,   92,  171,   92,   40,  168,  168,  168,
      168,  168,  168,   94,   40,   39,  195,   94,  131,   94,

       40,  193,  178,  131,  155,  155,   41,  170,  204,   49,
      207,  173,  178,  178,  178,  178,  178,  178,  181,  174,
       41,  108,  176,  176,  176,  108,   40,   40,  181,  181,
      181,  181,  181,  181,  213,   48,  155,  155,  155,  155,
      177,   49,  215,  200,  131,   40,  131,   41,  209,   92,
      177,  177,  177,  177,  177,  177,   39,   39,   39,  107,
       49,  197,  109,   94,  198,  155,  182,  185,  131,  155,
      155,  155,  155,  273,  232,  110,  182,  182,  182,  182,
      182,  182,  111,  206,  208,  110,  110,  110,  110,  110,
      110,  113,  113,  113,  113,  113,  155,  155,  155,  131,

      195,  190,  234,   92,  212,  217,  231,  131,  305,  155,
      179,  190,  190,  190,  190,  190,  190,   94,   94,   94,
      179,  179,  179,  179,  179,  179,  119,  183,  183,  183,
      119,  238,  155,  271,  155,  155,  203,   40,  406,   92,
      212,  241,  242,  155,  155,  184,  203,  203,  203,  203,
      203,  203,   49,   94,   94,  184,  184,  184,  184,  184,
      184,   48,   48,   48,  118,   92,  228,  213,  213,   40,
      187,  210,  120,  155,   92,  247,  279,  155,  372,   94,
      121,  210,  210,  210,  210,  210,  210,  122,   94,   41,
      121,  121,  121,  121,  121,  121,  128,  128,  128,  128,

      128,  131,   92,   40,  155,  131,  218,  155,  155,  166,
       92,  346,  155,  155,  308,  188,   94,  233,   49,  155,
      266,  239,  131,  155,   94,  188,  188,  188,  188,  188,
      188,  152,  152,  152,  152,  152,  267,  226,  155,  237,
      213,  220,  155,  155,   92,  347,  309,  446,  316,  155,
      201,  220,  220,  220,  220,  220,  220,  155,   94,   92,
      201,  201,  201,  201,  201,  201,  163,  163,  163,  163,
      163,  310,  155,   94,  155,  213,  221,  155,  155,  155,
      155,  398,  373,  351,  263,  211,  221,  221,  221,  221,
      221,  221,  222,  270,  272,  211,  211,  211,  211,  211,

      211,  274,  222,  222,  222,  222,  222,  222,  180,  180,
      180,  180,  180,  370,  155,  285,  155,  155,  224,  155,
      378,  285,  473,  155,  386,  418,  387,  223,  224,  224,
      224,  224,  224,  224,  225,  286,  288,  223,  223,  223,
      223,  223,  223,  229,  225,  225,  225,  225,  225,  225,
       92,  285,  155,  229,  229,  229,  229,  229,  229,  189,
      189,  189,  189,  189,   94,  155,  155,  213,  155,  235,
      311,  286,  283,  283,  283,  283,  283,  420,  230,  235,
      235,  235,  235,  235,  235,  254,  302,  342,  230,  230,
      230,  230,  230,  230,  202,  202,  202,  202,  202,  321,

      321,  321,  321,  321,  243,  155,  285,  285,  434,  155,
      366,  356,  322,  236,  243,  243,  243,  243,  243,  243,
      244,  288,  288,  236,  236,  236,  236,  236,  236,  245,
      244,  244,  244,  244,  244,  244,  405,  155,  402,  245,
      245,  245,  245,  245,  245,  250,  250,  250,  250,  250,
      257,  252,   94,   92,  285,  285,  253,  339,  254,  345,
      257,  257,  257,  257,  257,  257,  258,   94,  284,  285,
      155,  255,  259,  285,  286,  286,  258,  258,  258,  258,
      258,  258,  259,  259,  259,  259,  259,  259,  260,  286,
      155,  431,  355,  286,  261,  155,  354,  393,  260,  260,

      260,  260,  260,  260,  261,  261,  261,  261,  261,  261,
      262,  113,  113,  113,  113,  113,  264,  155,  396,   92,
      262,  262,  262,  262,  262,  262,  264,  264,  264,  264,
      264,  264,  265,   94,  353,  155,  444,  116,  268,  155,
      285,  285,  265,  265,  265,  265,  265,  265,  268,  268,
      268,  268,  268,  268,  269,  288,  288,  368,  423,  433,
      275,  155,  155,  155,  269,  269,  269,  269,  269,  269,
      275,  275,  275,  275,  275,  275,  276,  128,  128,  128,
      128,  128,  277,  445,  465,  451,  276,  276,  276,  276,
      276,  276,  277,  277,  277,  277,  277,  277,  250,  250,

      250,  250,  250,  131,  252,   92,  155,  155,  352,  253,
      155,  254,  283,  283,  283,  283,  283,  296,  480,   94,
      407,  408,  379,  480,  255,  254,  432,  296,  296,  296,
      296,  296,  296,  321,  321,  321,  321,  321,  255,  283,
      283,  283,  283,  289,  155,  291,  322,  155,  155,  297,
      291,  291,  292,  155,  394,  395,  116,  334,  293,  297,
      297,  297,  297,  297,  297,  294,  298,  417,  293,  293,
      293,  293,  293,  293,  299,  155,  298,  298,  298,  298,
      298,  298,  300,  419,  299,  299,  299,  299,  299,  299,
      301,  320,  300,  300,  300,  300,  300,  300,  303,  319,

      301,  301,  301,  301,  301,  301,  304,  318,  303,  303,
      303,  303,  303,  303,  306,  317,  304,  304,  304,  304,
      304,  304,  307,  155,  306,  306,  306,  306,  306,  306,
      312,  131,  307,  307,  307,  307,  307,  307,  313,  295,
      312,  312,  312,  312,  312,  312,  314,  155,  313,  313,
      313,  313,  313,  313,  397,  282,  314,  314,  314,  314,
      314,  314,  284,  284,  284,  323,  155,  155,  325,   92,
      155,  403,  435,  281,  404,  155,  283,  283,  283,  283,
      283,  326,  480,   94,  409,  155,  424,  480,  327,  254,
      410,  326,  326,  326,  326,  326,  326,  287,  287,  287,

      328,  155,  255,  392,  437,  155,  479,  287,  330,  283,
      283,  283,  283,  283,  155,  480,  331,  285,  155,  453,
      480,  421,  254,  332,  155,  422,  331,  331,  331,  331,
      331,  331,  288,  155,  155,  255,  283,  283,  283,  283,
      283,  436,  480,  155,  458,  280,  443,  480,  450,  254,
      283,  283,  283,  283,  283,  335,  480,  155,  155,  155,
      131,  480,  255,  254,  442,  335,  335,  335,  335,  335,
      335,  427,  427,  427,  427,  427,  255,  289,  289,  289,
      289,  289,  155,  480,  428,  155,  469,  336,  480,  456,
      254,  152,  152,  152,  152,  152,  333,  336,  336,  336,

      336,  336,  336,  255,  155,  464,  333,  333,  333,  333,
      333,  333,  283,  283,  283,  283,  289,  155,  291,  155,
      155,  452,  337,  291,  291,  292,  457,  459,  155,  131,
      470,  293,  337,  337,  337,  337,  337,  337,  294,  338,
      155,  293,  293,  293,  293,  293,  293,  340,  468,  338,
      338,  338,  338,  338,  338,  341,  155,  340,  340,  340,
      340,  340,  340,  343,  228,  341,  341,  341,  341,  341,
      341,  344,  256,  343,  343,  343,  343,  343,  343,  472,
      249,  344,  344,  344,  344,  344,  344,   89,   89,   89,
       89,   89,  348,  480,  480,  480,  480,  480,  155,   92,

      462,  155,  348,  348,  348,  348,  348,  348,  349,  480,
      155,  155,  474,   94,  248,  478,  477,  155,  349,  349,
      349,  349,  349,  349,  357,  321,  321,  321,  357,  131,
      285,  463,  361,  321,  321,  321,  361,  358,  131,  155,
      155,  131,  131,  285,  131,  362,  475,  476,  228,  365,
      286,  324,  359,  359,  359,  324,  116,  285,  288,  365,
      365,  365,  365,  365,  365,  357,  321,  321,  321,  357,
      360,  285,  180,  180,  180,  180,  180,  286,  358,  219,
      360,  360,  360,  360,  360,  360,  284,  284,  284,  323,
      216,  286,  325,  165,  155,  155,   39,  199,  116,  131,

      189,  189,  189,  189,  189,  326,   39,   39,   39,   39,
       39,   39,  327,  131,  131,  326,  326,  326,  326,  326,
      326,  329,  363,  363,  363,  329,  131,  131,  131,  131,
      131,  367,  285,  131,  202,  202,  202,  202,  202,  131,
      364,  367,  367,  367,  367,  367,  367,  288,  131,  131,
      364,  364,  364,  364,  364,  364,  287,  287,  287,  328,
      155,  131,  127,  116,  116,  175,   48,  330,  165,  155,
      150,  131,  131,   57,   63,  331,   48,   48,   48,   48,
       48,   48,  332,  369,   59,  331,  331,  331,  331,  331,
      331,  371,  127,  369,  369,  369,  369,  369,  369,  123,

      116,  371,  371,  371,  371,  371,  371,  163,  163,  163,
      163,  163,  374,  106,  101,  100,   91,   79,   58,   92,
       57,   50,  374,  374,  374,  374,  374,  374,  375,   47,
      480,   35,   35,   94,  480,  480,  480,  480,  375,  375,
      375,  375,  375,  375,  361,  321,  321,  321,  361,  376,
      480,  480,  480,  480,  480,  285,  480,  362,  480,  376,
      376,  376,  376,  376,  376,  377,  480,  480,  155,  480,
      288,  480,  480,  480,  380,  377,  377,  377,  377,  377,
      377,  381,  480,  382,  388,  480,  480,  480,  383,  384,
      389,  480,  385,  480,  388,  388,  388,  388,  388,  388,

      389,  389,  389,  389,  389,  389,  390,  480,  480,  480,
      480,  480,  391,  480,  480,  480,  390,  390,  390,  390,
      390,  390,  391,  391,  391,  391,  391,  391,  399,  480,
      480,  480,  480,  480,  400,  480,  480,  480,  399,  399,
      399,  399,  399,  399,  400,  400,  400,  400,  400,  400,
      401,  480,  480,  480,  480,  480,  411,  480,  480,  480,
      401,  401,  401,  401,  401,  401,  411,  411,  411,  411,
      411,  411,  412,  480,  480,  480,  480,  480,  251,  480,
      480,  480,  412,  412,  412,  412,  412,  412,  251,  251,
      251,  251,  251,  251,  413,  413,  413,  413,  413,  480,

      480,  284,  480,  480,  480,  480,  480,  480,  480,  480,
      414,  284,  284,  284,  284,  284,  284,  287,  480,  480,
      415,  413,  413,  413,  413,  413,  480,  287,  287,  287,
      287,  287,  287,  480,  480,  480,  480,  414,  426,  480,
      480,  427,  427,  427,  427,  427,  480,  415,  426,  426,
      426,  426,  426,  426,  428,  427,  427,  427,  427,  427,
      480,  427,  427,  427,  427,  427,  480,  430,  428,  480,
      480,  480,  480,  480,  428,  480,  480,  480,  441,  480,
      480,  430,  438,  438,  438,  438,  438,  430,  441,  441,
      441,  441,  441,  441,  480,  428,  427,  427,  427,  427,

      427,  439,  480,  480,  480,  480,  480,  480,  430,  428,
      480,  439,  439,  439,  439,  439,  439,  447,  480,  480,
      480,  480,  430,  480,  480,  480,  480,  447,  447,  447,
      447,  447,  447,  427,  427,  427,  427,  427,  454,  480,
      480,  427,  427,  427,  427,  427,  428,  480,  454,  454,
      454,  454,  454,  454,  428,  480,  480,  480,  455,  430,
      448,  448,  448,  448,  448,  480,  480,  430,  455,  455,
      455,  455,  455,  455,  480,  480,  480,  480,  480,  449,
      480,  480,  480,  480,  480,  460,  480,  480,  480,  449,
      449,  449,  449,  449,  449,  460,  460,  460,  460,  460,

      460,  461,  480,  480,  480,  480,  480,  466,  480,  480,
      480,  461,  461,  461,  461,  461,  461,  466,  466,  466,
      466,  466,  466,  467,  480,  480,  480,  480,  480,  429,
      480,  480,  480,  467,  467,  467,  467,  467,  467,  429,
      429,  429,  429,  429,  429,  471,  480,  480,  480,  480,
      480,  429,  480,  480,  480,  471,  471,  471,  471,  471,
      471,  429,  429,  429,  429,  429,  429,   39,  480,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   45,   45,
      480,   45,   45,   48,  480,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   54,   54,  480,   54,   54,   82,

      480,  480,   82,   82,   89,   89,   89,   89,   89,   89,
       89,   89,   89,   93,  480,   93,   93,  480,   93,   93,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      115,  115,  480,  115,  115,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,   65,   65,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  130,
      130,  480,  130,  130,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  154,  154,  480,  154,  154,  163,  163,

      163,  163,  163,  163,  163,  163,  163,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  202,  202,  202,
      202,  202,  202,  202,  202,  202,  214,  214,  214,  480,
      214,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  246,  246,  246,  480,  246,  251,  251,
      251,  251,  480,  251,  251,  251,  251,  251,  251,  278,
      278,  278,  480,  278,  284,  480,  284,  284,  284,  284,
      284,  284,  284,  284,  284,  287,  480,  287,  287,  287,

      287,  287,  287,  287,  287,  287,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  315,  315,  315,
      480,  315,  324,  324,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  350,  350,  350,  480,  350,  416,
      416,  416,  480,  480,  480,  416,  480,  480,  416,  416,
      425,  425,  425,  425,  425,  425,  425,  425,  425,  429,
      429,  429,  480,  480,  429,  429,  429,  480,  429,  429,
      440,  440,  440,  440,  440,  440,  440,  440,  440,    7,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,

      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480
    } ;

static yyconst short int yy_chk[2451] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3,  134,    4,    9,    9,    9,    9,    9,   12,    3,
      134,    4,   10,   10,   10,   10,   10,   11,   11,   11,
       11,   11,    3,    3,    4,    4,   13,   67,   12,   13,
       15,   39,   52,   25,   67,    3,   13,    4,   31,   13,

       13,   13,   13,   13,   13,   15,   17,   25,   22,   17,
       27,   39,   31,   27,   11,   52,   17,   26,   22,   69,
       26,   26,   71,   22,   27,   48,   22,   42,   31,   22,
       42,   26,   17,   22,   22,  157,   22,   42,   71,   69,
       48,   17,   20,   23,   27,   64,   54,   64,   26,   20,
       20,  157,   20,   23,   23,   23,   23,   23,   23,   20,
       54,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   33,   32,
       35,   20,   32,   32,   36,   36,   36,   36,   36,   57,

       43,   57,   33,   32,   35,   37,   37,   37,   37,   37,
       43,   43,   43,   43,   43,   43,   44,   84,   33,   55,
       32,   35,   55,   55,   57,   46,   44,   44,   44,   44,
       44,   44,   46,   55,   84,   46,   46,   46,   46,   46,
       46,   53,   37,   41,   41,   41,   41,   56,   66,   41,
       72,   53,   53,   53,   53,   53,   53,   70,  147,   86,
       72,   56,   41,   66,  147,   75,   86,   68,   56,   41,
       75,   73,   41,   41,   41,   41,   41,   41,   49,   49,
       49,   49,   68,   74,   74,   70,   73,   75,   63,   49,
      479,   75,   73,   68,   74,   78,   80,   49,   63,   63,

       63,   63,   63,   63,   49,   83,   80,   49,   49,   49,
       49,   49,   49,   76,   81,   83,   76,   85,   78,   87,
       76,   89,   87,  140,   81,   81,   81,   81,   81,   81,
       88,   80,   85,   88,  108,   89,   90,   90,   90,   90,
       90,  132,   93,   96,   97,  103,  124,  124,   90,  127,
       96,  140,  207,  127,  108,   90,   93,   96,   97,  103,
      132,   94,   90,  207,  102,   90,   90,   90,   90,   90,
       90,   94,   94,   94,   94,   94,   94,   98,  102,   99,
       97,  103,   98,  104,  102,  105,  109,   98,   98,   98,
       98,   98,   98,   99,  119,  107,  143,  104,  137,  105,

      107,  137,  112,  143,  159,  156,  109,   99,  156,  119,
      159,  104,  112,  112,  112,  112,  112,  112,  116,  105,
      107,  110,  110,  110,  110,  110,  120,  110,  116,  116,
      116,  116,  116,  116,  168,  118,  151,  476,  469,  161,
      110,  120,  168,  151,  149,  118,  148,  110,  161,  125,
      110,  110,  110,  110,  110,  110,  111,  111,  111,  111,
      118,  148,  111,  125,  149,  158,  117,  125,  193,  160,
      240,  463,  458,  240,  193,  111,  117,  117,  117,  117,
      117,  117,  111,  158,  160,  111,  111,  111,  111,  111,
      111,  114,  114,  114,  114,  114,  442,  267,  200,  191,

      195,  131,  200,  163,  167,  170,  191,  195,  267,  205,
      114,  131,  131,  131,  131,  131,  131,  163,  167,  170,
      114,  114,  114,  114,  114,  114,  121,  121,  121,  121,
      121,  205,  395,  238,  208,  209,  155,  121,  395,  171,
      172,  208,  209,  238,  436,  121,  155,  155,  155,  155,
      155,  155,  121,  171,  172,  121,  121,  121,  121,  121,
      121,  122,  122,  122,  122,  173,  228,  214,  246,  176,
      228,  162,  122,  346,  174,  214,  246,  431,  346,  173,
      122,  162,  162,  162,  162,  162,  162,  122,  174,  176,
      122,  122,  122,  122,  122,  122,  129,  129,  129,  129,

      129,  198,  166,  183,  206,  231,  173,  270,  309,  166,
      185,  309,  421,  387,  270,  129,  166,  198,  183,  204,
      231,  206,  129,  234,  185,  129,  129,  129,  129,  129,
      129,  153,  153,  153,  153,  153,  234,  185,  271,  204,
      278,  177,  311,  437,  218,  311,  271,  437,  278,  272,
      153,  177,  177,  177,  177,  177,  177,  153,  218,  226,
      153,  153,  153,  153,  153,  153,  164,  164,  164,  164,
      164,  272,  237,  226,  239,  315,  178,  347,  385,  386,
      241,  385,  347,  315,  226,  164,  178,  178,  178,  178,
      178,  178,  179,  237,  239,  164,  164,  164,  164,  164,

      164,  241,  179,  179,  179,  179,  179,  179,  181,  181,
      181,  181,  181,  342,  404,  252,  470,  372,  182,  373,
      366,  253,  470,  342,  372,  404,  373,  181,  182,  182,
      182,  182,  182,  182,  184,  252,  253,  181,  181,  181,
      181,  181,  181,  188,  184,  184,  184,  184,  184,  184,
      263,  284,  274,  188,  188,  188,  188,  188,  188,  190,
      190,  190,  190,  190,  263,  305,  406,  350,  345,  201,
      274,  284,  283,  283,  283,  283,  283,  406,  190,  201,
      201,  201,  201,  201,  201,  283,  263,  305,  190,  190,
      190,  190,  190,  190,  203,  203,  203,  203,  203,  285,

      285,  285,  285,  285,  210,  420,  287,  329,  420,  394,
      334,  320,  285,  203,  210,  210,  210,  210,  210,  210,
      211,  287,  329,  203,  203,  203,  203,  203,  203,  213,
      211,  211,  211,  211,  211,  211,  394,  308,  392,  213,
      213,  213,  213,  213,  213,  217,  217,  217,  217,  217,
      220,  217,  392,  302,  324,  358,  217,  302,  217,  308,
      220,  220,  220,  220,  220,  220,  221,  302,  323,  359,
      417,  217,  222,  323,  324,  358,  221,  221,  221,  221,
      221,  221,  222,  222,  222,  222,  222,  222,  223,  359,
      380,  417,  319,  323,  224,  383,  318,  380,  223,  223,

      223,  223,  223,  223,  224,  224,  224,  224,  224,  224,
      225,  336,  336,  336,  336,  336,  229,  434,  383,  339,
      225,  225,  225,  225,  225,  225,  229,  229,  229,  229,
      229,  229,  230,  339,  317,  409,  434,  336,  235,  419,
      362,  363,  230,  230,  230,  230,  230,  230,  235,  235,
      235,  235,  235,  235,  236,  362,  363,  339,  409,  419,
      243,  435,  444,  459,  236,  236,  236,  236,  236,  236,
      243,  243,  243,  243,  243,  243,  244,  340,  340,  340,
      340,  340,  245,  435,  459,  444,  244,  244,  244,  244,
      244,  244,  245,  245,  245,  245,  245,  245,  250,  250,

      250,  250,  250,  340,  250,  368,  396,  397,  316,  250,
      418,  250,  251,  251,  251,  251,  251,  257,  251,  368,
      396,  397,  368,  251,  250,  251,  418,  257,  257,  257,
      257,  257,  257,  321,  321,  321,  321,  321,  251,  255,
      255,  255,  255,  255,  310,  255,  321,  381,  382,  258,
      255,  255,  255,  403,  381,  382,  300,  295,  255,  258,
      258,  258,  258,  258,  258,  255,  259,  403,  255,  255,
      255,  255,  255,  255,  260,  405,  259,  259,  259,  259,
      259,  259,  261,  405,  260,  260,  260,  260,  260,  260,
      262,  282,  261,  261,  261,  261,  261,  261,  264,  281,

      262,  262,  262,  262,  262,  262,  265,  280,  264,  264,
      264,  264,  264,  264,  268,  279,  265,  265,  265,  265,
      265,  265,  269,  273,  268,  268,  268,  268,  268,  268,
      275,  266,  269,  269,  269,  269,  269,  269,  276,  256,
      275,  275,  275,  275,  275,  275,  277,  384,  276,  276,
      276,  276,  276,  276,  384,  249,  277,  277,  277,  277,
      277,  277,  286,  286,  286,  286,  393,  422,  286,  379,
      398,  393,  422,  248,  393,  410,  289,  289,  289,  289,
      289,  286,  289,  379,  398,  478,  410,  289,  286,  289,
      398,  286,  286,  286,  286,  286,  286,  288,  288,  288,

      288,  424,  289,  379,  424,  446,  478,  328,  288,  290,
      290,  290,  290,  290,  407,  290,  288,  328,  408,  446,
      290,  407,  290,  288,  452,  408,  288,  288,  288,  288,
      288,  288,  328,  443,  423,  290,  291,  291,  291,  291,
      291,  423,  291,  433,  452,  247,  433,  291,  443,  291,
      292,  292,  292,  292,  292,  296,  292,  432,  242,  464,
      233,  292,  291,  292,  432,  296,  296,  296,  296,  296,
      296,  427,  427,  427,  427,  427,  292,  293,  293,  293,
      293,  293,  450,  293,  427,  457,  464,  298,  293,  450,
      293,  343,  343,  343,  343,  343,  293,  298,  298,  298,

      298,  298,  298,  293,  445,  457,  293,  293,  293,  293,
      293,  293,  294,  294,  294,  294,  294,  343,  294,  451,
      453,  445,  299,  294,  294,  294,  451,  453,  462,  232,
      465,  294,  299,  299,  299,  299,  299,  299,  294,  301,
      465,  294,  294,  294,  294,  294,  294,  303,  462,  301,
      301,  301,  301,  301,  301,  304,  468,  303,  303,  303,
      303,  303,  303,  306,  227,  304,  304,  304,  304,  304,
      304,  307,  219,  306,  306,  306,  306,  306,  306,  468,
      216,  307,  307,  307,  307,  307,  307,  312,  312,  312,
      312,  312,  313,  414,  414,  414,  414,  414,  472,  312,

      456,  477,  313,  313,  313,  313,  313,  313,  314,  414,
      456,  475,  472,  312,  215,  477,  475,  202,  314,  314,
      314,  314,  314,  314,  325,  325,  325,  325,  325,  197,
      325,  456,  330,  330,  330,  330,  330,  325,  196,  473,
      474,  194,  192,  330,  189,  330,  473,  474,  186,  333,
      325,  326,  326,  326,  326,  326,  180,  326,  330,  333,
      333,  333,  333,  333,  333,  357,  357,  357,  357,  357,
      326,  357,  367,  367,  367,  367,  367,  326,  357,  175,
      326,  326,  326,  326,  326,  326,  327,  327,  327,  327,
      169,  357,  327,  165,  154,  152,  335,  150,  367,  146,

      369,  369,  369,  369,  369,  327,  335,  335,  335,  335,
      335,  335,  327,  145,  144,  327,  327,  327,  327,  327,
      327,  331,  331,  331,  331,  331,  369,  142,  141,  139,
      138,  337,  331,  136,  371,  371,  371,  371,  371,  135,
      331,  337,  337,  337,  337,  337,  337,  331,  133,  130,
      331,  331,  331,  331,  331,  331,  332,  332,  332,  332,
      371,  128,  126,  115,  113,  106,  338,  332,   95,   82,
       79,   77,   65,   61,   60,  332,  338,  338,  338,  338,
      338,  338,  332,  341,   59,  332,  332,  332,  332,  332,
      332,  344,   58,  341,  341,  341,  341,  341,  341,   51,

       45,  344,  344,  344,  344,  344,  344,  348,  348,  348,
      348,  348,  349,   38,   29,   28,   24,   21,   19,  348,
       18,   16,  349,  349,  349,  349,  349,  349,  360,   14,
        7,    6,    5,  348,    0,    0,    0,    0,  360,  360,
      360,  360,  360,  360,  361,  361,  361,  361,  361,  364,
        0,    0,    0,    0,    0,  361,    0,  361,    0,  364,
      364,  364,  364,  364,  364,  365,    0,    0,  370,    0,
      361,    0,    0,    0,  370,  365,  365,  365,  365,  365,
      365,  370,    0,  370,  374,    0,    0,    0,  370,  370,
      375,    0,  370,    0,  374,  374,  374,  374,  374,  374,

      375,  375,  375,  375,  375,  375,  376,    0,    0,    0,
        0,    0,  377,    0,    0,    0,  376,  376,  376,  376,
      376,  376,  377,  377,  377,  377,  377,  377,  389,    0,
        0,    0,    0,    0,  390,    0,    0,    0,  389,  389,
      389,  389,  389,  389,  390,  390,  390,  390,  390,  390,
      391,    0,    0,    0,    0,    0,  399,    0,    0,    0,
      391,  391,  391,  391,  391,  391,  399,  399,  399,  399,
      399,  399,  400,    0,    0,    0,    0,    0,  401,    0,
        0,    0,  400,  400,  400,  400,  400,  400,  401,  401,
      401,  401,  401,  401,  402,  402,  402,  402,  402,    0,

        0,  411,    0,    0,    0,    0,    0,    0,    0,    0,
      402,  411,  411,  411,  411,  411,  411,  412,    0,    0,
      402,  413,  413,  413,  413,  413,    0,  412,  412,  412,
      412,  412,  412,    0,    0,    0,    0,  413,  415,    0,
        0,  416,  416,  416,  416,  416,    0,  413,  415,  415,
      415,  415,  415,  415,  416,  425,  425,  425,  425,  425,
        0,  429,  429,  429,  429,  429,    0,  416,  425,    0,
        0,    0,    0,    0,  429,    0,    0,    0,  430,    0,
        0,  425,  426,  426,  426,  426,  426,  429,  430,  430,
      430,  430,  430,  430,    0,  426,  438,  438,  438,  438,

      438,  426,    0,    0,    0,    0,    0,    0,  426,  438,
        0,  426,  426,  426,  426,  426,  426,  439,    0,    0,
        0,    0,  438,    0,    0,    0,    0,  439,  439,  439,
      439,  439,  439,  440,  440,  440,  440,  440,  447,    0,
        0,  448,  448,  448,  448,  448,  440,    0,  447,  447,
      447,  447,  447,  447,  448,    0,    0,    0,  449,  440,
      441,  441,  441,  441,  441,    0,    0,  448,  449,  449,
      449,  449,  449,  449,    0,    0,    0,    0,    0,  441,
        0,    0,    0,    0,    0,  454,    0,    0,    0,  441,
      441,  441,  441,  441,  441,  454,  454,  454,  454,  454,

      454,  455,    0,    0,    0,    0,    0,  460,    0,    0,
        0,  455,  455,  455,  455,  455,  455,  460,  460,  460,
      460,  460,  460,  461,    0,    0,    0,    0,    0,  466,
        0,    0,    0,  461,  461,  461,  461,  461,  461,  466,
      466,  466,  466,  466,  466,  467,    0,    0,    0,    0,
        0,  471,    0,    0,    0,  467,  467,  467,  467,  467,
      467,  471,  471,  471,  471,  471,  471,  481,    0,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  482,  482,
        0,  482,  482,  483,    0,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  484,  484,    0,  484,  484,  485,

        0,    0,  485,  485,  486,  486,  486,  486,  486,  486,
      486,  486,  486,  487,    0,  487,  487,    0,  487,  487,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  489,  489,  489,  489,  489,  489,  489,  489,  489,
      490,  490,    0,  490,  490,  491,  491,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  492,  492,  493,  493,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  495,
      495,    0,  495,  495,  496,  496,  496,  496,  496,  496,
      496,  496,  496,  497,  497,    0,  497,  497,  498,  498,

      498,  498,  498,  498,  498,  498,  498,  499,  499,  499,
      499,  499,  499,  499,  499,  499,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  501,  501,
      501,  501,  501,  501,  501,  501,  501,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  503,  503,  503,    0,
      503,  504,  504,  504,  504,  504,  504,  504,  504,  504,
      504,  504,  504,  505,  505,  505,    0,  505,  506,  506,
      506,  506,    0,  506,  506,  506,  506,  506,  506,  507,
      507,  507,    0,  507,  508,    0,  508,  508,  508,  508,
      508,  508,  508,  508,  508,  509,    0,  509,  509,  509,

      509,  509,  509,  509,  509,  509,  510,  510,  510,  510,
      510,  510,  510,  510,  510,  510,  510,  511,  511,  511,
        0,  511,  512,  512,  512,  512,  512,  512,  512,  512,
      512,  512,  512,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  514,  514,  514,    0,  514,  515,
      515,  515,    0,    0,    0,  515,    0,    0,  515,  515,
      516,  516,  516,  516,  516,  516,  516,  516,  516,  517,
      517,  517,    0,    0,  517,  517,  517,    0,  517,  517,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,

      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480
    } ;

#line 1 "external/webkit/WebCore/css/tokenizer.flex"
#define INITIAL 0
#define YY_STACK_USED 1
#define mediaquery 1
YY_DECL
	{
	register yy_state_type yy_current_state;
	register UChar *yy_cp, *yy_bp;
	register int yy_act;
	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 481 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 2390 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;




		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 31 "external/webkit/WebCore/css/tokenizer.flex"
/* ignore comments */
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 33 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WHITESPACE; return yyTok;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 35 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 36 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 37 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = INCLUDES; return yyTok;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 38 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = DASHMATCH; return yyTok;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 39 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = BEGINSWITH; return yyTok;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 40 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = ENDSWITH; return yyTok;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 41 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = CONTAINS; return yyTok;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 42 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = MEDIA_NOT; return yyTok;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 43 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = MEDIA_ONLY; return yyTok;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 44 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = MEDIA_AND; return yyTok;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 45 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(mediaquery); yyTok = VARIABLES_FOR; return yyTok; }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 47 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = STRING; return yyTok;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 48 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = IDENT; return yyTok;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 49 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = NTH; return yyTok;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 51 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = HEX; return yyTok;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 52 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = IDSEL; return yyTok;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 54 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(mediaquery); yyTok = IMPORT_SYM; return yyTok;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 55 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = PAGE_SYM; return yyTok;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 56 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(mediaquery); yyTok = MEDIA_SYM; return yyTok;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 57 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = FONT_FACE_SYM; return yyTok;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 58 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = CHARSET_SYM; return yyTok;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 59 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = NAMESPACE_SYM; return yyTok; }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 60 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_RULE_SYM; return yyTok; }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 61 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_DECLS_SYM; return yyTok; }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 62 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_VALUE_SYM; return yyTok; }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 63 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(mediaquery); yyTok = WEBKIT_MEDIAQUERY_SYM; return yyTok; }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 64 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_SELECTOR_SYM; return yyTok; }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 65 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(mediaquery); yyTok = WEBKIT_VARIABLES_SYM; return yyTok; }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 66 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(forkeyword); yyTok = WEBKIT_DEFINE_SYM; return yyTok; }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 67 "external/webkit/WebCore/css/tokenizer.flex"
{ yyTok = WEBKIT_VARIABLES_DECLS_SYM; return yyTok; }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 68 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_KEYFRAMES_SYM; return yyTok; }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 69 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = WEBKIT_KEYFRAME_RULE_SYM; return yyTok; }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 71 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = ATKEYWORD; return yyTok; }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 73 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = IMPORTANT_SYM; return yyTok;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 75 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = EMS; return yyTok;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 76 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = REMS; return yyTok;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 77 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = QEMS; return yyTok;} /* quirky ems */
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 78 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = EXS; return yyTok;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 79 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = PXS; return yyTok;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 80 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = CMS; return yyTok;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 81 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = MMS; return yyTok;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 82 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = INS; return yyTok;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 83 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = PTS; return yyTok;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 84 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = PCS; return yyTok;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 85 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = DEGS; return yyTok;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 86 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = RADS; return yyTok;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 87 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = GRADS; return yyTok;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 88 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = TURNS; return yyTok;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 89 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = MSECS; return yyTok;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 90 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = SECS; return yyTok;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 91 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = HERZ; return yyTok;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 92 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = KHERZ; return yyTok;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 93 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = DIMEN; return yyTok;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 94 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = PERCENTAGE; return yyTok;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 95 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = INTEGER; return yyTok;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 96 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = FLOATTOKEN; return yyTok;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 98 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = NOTFUNCTION; return yyTok;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 99 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 100 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 101 "external/webkit/WebCore/css/tokenizer.flex"
{ yyTok = VARCALL; return yyTok; }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 102 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 104 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 105 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 66:
#line 108 "external/webkit/WebCore/css/tokenizer.flex"
case 67:
YY_RULE_SETUP
#line 108 "external/webkit/WebCore/css/tokenizer.flex"
{BEGIN(INITIAL); yyTok = *yytext; return yyTok; }
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 109 "external/webkit/WebCore/css/tokenizer.flex"
{yyTok = *yytext; return yyTok;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 111 "external/webkit/WebCore/css/tokenizer.flex"
ECHO;
	YY_BREAK
case YY_END_OF_BUFFER:
	yy_c_buf_p = yy_cp - 1;
	yy_cp = yy_c_buf_p;
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(mediaquery):
case YY_STATE_EOF(forkeyword):
	yyterminate();

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */
