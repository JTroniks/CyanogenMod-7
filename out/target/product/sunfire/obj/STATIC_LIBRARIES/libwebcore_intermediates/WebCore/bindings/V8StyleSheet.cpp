/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
    Boston, MA 02111-1307, USA.
*/
#include "config.h"
#include "RuntimeEnabledFeatures.h"
#include "V8Proxy.h"
#include "V8Binding.h"
#include "V8BindingState.h"
#include "V8DOMWrapper.h"
#include "V8IsolatedContext.h"

#undef LOG

#include "V8MediaList.h"
#include "V8Node.h"
#include "V8StyleSheet.h"
#include "wtf/GetPtr.h"
#include "wtf/RefCounted.h"
#include "wtf/RefPtr.h"

namespace WebCore {
namespace StyleSheetInternal {

template <typename T> void V8_USE(T) { }

  static v8::Handle<v8::Value> typeAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.type._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return v8StringOrNull(imp->type());
  }

  static v8::Handle<v8::Value> disabledAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.disabled._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return v8Boolean(imp->disabled());
  }

  static void disabledAttrSetter(v8::Local<v8::String> name, v8::Local<v8::Value> value, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.disabled._set");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    bool v = value->BooleanValue();
    imp->setDisabled(v);
    return;
  }

  static v8::Handle<v8::Value> ownerNodeAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.ownerNode._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return toV8(imp->ownerNode());
  }

  static v8::Handle<v8::Value> parentStyleSheetAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.parentStyleSheet._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return toV8(imp->parentStyleSheet());
  }

  static v8::Handle<v8::Value> hrefAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.href._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return v8StringOrNull(imp->href());
  }

  static v8::Handle<v8::Value> titleAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.title._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return v8StringOrNull(imp->title());
  }

  static v8::Handle<v8::Value> mediaAttrGetter(v8::Local<v8::String> name, const v8::AccessorInfo& info) {
    INC_STATS("DOM.StyleSheet.media._get");
    StyleSheet* imp = V8StyleSheet::toNative(info.Holder());
    return toV8(imp->media());
  }

} // namespace StyleSheetInternal

static const BatchedAttribute StyleSheet_attrs[] = {
    {
        // Attribute 'type' (Type: 'readonly attribute' ExtAttr: 'ConvertNullStringTo')
        "type",
        StyleSheetInternal::typeAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'disabled' (Type: 'attribute' ExtAttr: '')
        "disabled",
        StyleSheetInternal::disabledAttrGetter,
        StyleSheetInternal::disabledAttrSetter,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'ownerNode' (Type: 'readonly attribute' ExtAttr: '')
        "ownerNode",
        StyleSheetInternal::ownerNodeAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'parentStyleSheet' (Type: 'readonly attribute' ExtAttr: '')
        "parentStyleSheet",
        StyleSheetInternal::parentStyleSheetAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'href' (Type: 'readonly attribute' ExtAttr: 'ConvertNullStringTo')
        "href",
        StyleSheetInternal::hrefAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'title' (Type: 'readonly attribute' ExtAttr: 'ConvertNullStringTo')
        "title",
        StyleSheetInternal::titleAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
    {
        // Attribute 'media' (Type: 'readonly attribute' ExtAttr: '')
        "media",
        StyleSheetInternal::mediaAttrGetter,
        0,
        V8ClassIndex::INVALID_CLASS_INDEX /* no data */,
        static_cast<v8::AccessControl>(v8::DEFAULT),
        static_cast<v8::PropertyAttribute>(v8::None),
        0 /* on instance */
    },
};
static v8::Persistent<v8::FunctionTemplate> ConfigureV8StyleSheetTemplate(v8::Persistent<v8::FunctionTemplate> desc) {
  v8::Local<v8::Signature> default_signature = configureTemplate(desc, "StyleSheet",
      v8::Persistent<v8::FunctionTemplate>(), V8StyleSheet::internalFieldCount,
      StyleSheet_attrs, sizeof(StyleSheet_attrs)/sizeof(*StyleSheet_attrs),
      NULL, 0);
  

  // Custom toString template
  desc->Set(getToStringName(), getToStringTemplate());
  return desc;
}

v8::Persistent<v8::FunctionTemplate> V8StyleSheet::GetRawTemplate() {
  static v8::Persistent<v8::FunctionTemplate> V8StyleSheet_raw_cache_ = createRawTemplate();
  return V8StyleSheet_raw_cache_;
}

v8::Persistent<v8::FunctionTemplate> V8StyleSheet::GetTemplate() {
  static v8::Persistent<v8::FunctionTemplate> V8StyleSheet_cache_ = ConfigureV8StyleSheetTemplate(GetRawTemplate());
  return V8StyleSheet_cache_;
}

StyleSheet* V8StyleSheet::toNative(v8::Handle<v8::Object> object) {
  return reinterpret_cast<StyleSheet*>(object->GetPointerFromInternalField(v8DOMWrapperObjectIndex));
}

bool V8StyleSheet::HasInstance(v8::Handle<v8::Value> value) {
  return GetRawTemplate()->HasInstance(value);
}


v8::Handle<v8::Object> V8StyleSheet::wrap(StyleSheet* impl) {
  v8::Handle<v8::Object> wrapper;
  V8Proxy* proxy = 0;
  wrapper = getDOMObjectMap().get(impl);
  if (!wrapper.IsEmpty())
    return wrapper;
  wrapper = V8DOMWrapper::instantiateV8Object(proxy, V8ClassIndex::STYLESHEET, impl);
  if (wrapper.IsEmpty())
    return wrapper;

  impl->ref();
  getDOMObjectMap().set(impl, v8::Persistent<v8::Object>::New(wrapper));
  return wrapper;
}

v8::Handle<v8::Value> toV8(PassRefPtr<StyleSheet > impl) {
  return toV8(impl.get());
}
} // namespace WebCore
