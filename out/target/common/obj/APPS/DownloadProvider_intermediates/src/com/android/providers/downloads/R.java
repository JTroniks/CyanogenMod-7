/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.providers.downloads;

public final class R {
    public static final class attr {
    }
    public static final class id {
        public static final int appIcon=0x7f050000;
        public static final int description=0x7f050003;
        public static final int paused_text=0x7f050005;
        public static final int progress_bar=0x7f050004;
        public static final int progress_text=0x7f050001;
        public static final int title=0x7f050002;
    }
    public static final class layout {
        public static final int status_bar_ongoing_event_progress_bar=0x7f020000;
    }
    public static final class string {
        /**  This is the name of the Download Manager application. 
         */
        public static final int app_label=0x7f030000;
        /**  Text for button to cancel a download because it's too large to proceed over the mobile
         network and the user does not want to queue it for Wi-Fi [CHAR LIMIT=25] 
         */
        public static final int button_cancel_download=0x7f03001a;
        /**  Text for button to queue a download to start next time Wi-Fi is available [CHAR LIMIT=25]
        
         */
        public static final int button_queue_for_wifi=0x7f030019;
        /**  Text for button to start a download over the mobile connection now, even though it's over
         the carrier-specified recommended maximum size for downloads over the mobile connection
         [CHAR LIMIT=25] 
         */
        public static final int button_start_now=0x7f03001b;
        /**  This is the title that is used when displaying the notification
    for a download that doesn't have a title associated with it. 
         */
        public static final int download_unknown_title=0x7f03000f;
        /**  When a download completes, a notification is displayed, and this
        string is used to indicate that the download successfully completed.
        Note that such a download could have been initiated by a variety of
        applications, including (but not limited to) the browser, an email
        application, a content marketplace. 
         */
        public static final int notification_download_complete=0x7f030012;
        /**  When a download completes, a notification is displayed, and this
        string is used to indicate that the download failed.
        Note that such a download could have been initiated by a variety of
        applications, including (but not limited to) the browser, an email
        application, a content marketplace. 
         */
        public static final int notification_download_failed=0x7f030013;
        /**  When there are three or more simultaneous outstanding downloads from a
        single application, they are displayed as a single notification,
        and the expanded notification view uses this string to indicate
        downloads beyond the first two, i.e. "[title], [title] and [n] more".
        This is the " and [n] more" part, including the leading space, and it's
        used regardless of the number of additional downloads. 
         */
        public static final int notification_filename_extras=0x7f030011;
        /**  When there are multiple simultaneous outstanding downloads from a
        single application, they are displayed as a single notification,
        and the expanded notification view displays the first two download
        names separated with this string, i.e. "[title], [title]"
        or "[title], [title] and [n] more". This is the comma + space
        that separates the first two titles, and it's used both when there
        are exactly two and more than two titles. 
         */
        public static final int notification_filename_separator=0x7f030010;
        /**  When a download is paused because it's too large to download over a
        mobile connection, and Wi-Fi is unavailable, this string is displayed in
        the system notification for the running download, beneath the download
        title and description.  Note that such a download could have been
        initiated by a variety of applications, including (but not limited to)
        the browser, an email application, a content marketplace.
        [CHAR LIMIT=24] 
         */
        public static final int notification_need_wifi_for_size=0x7f030014;
        /**  The full sentence description for the permission to access all
    downloads in the download manager, not just those owned by the calling user
    [CHAR LIMIT=160] 
         */
        public static final int permdesc_accessAllDownloads=0x7f03000e;
        /**  The full sentence description for the permission to download files to
    the download cache that can't be automatically deleted by the download
    manager to free up space [CHAR LIMIT=160] 
         */
        public static final int permdesc_downloadCacheNonPurgeable=0x7f03000a;
        /**  This is the long description of a permission associated with the
        Android Download Manager. It is displayed as part of the description
        of any application that was granted that permission.
        This specific permission allows an application to tell other
        applications that their downloads have completed. 
         */
        public static final int permdesc_downloadCompletedIntent=0x7f030006;
        /**  This is the long description of a permission associated with the
        Android Download Manager. It is displayed as part of the description
        of any application that was granted that permission.
        This specific permission controls access to the Download Manager by
        applications that initiate downloads. 
         */
        public static final int permdesc_downloadManager=0x7f030002;
        /**  This is the long description of a permission associated with the
        Android Download Manager. It is displayed as part of the description
        of any application that was granted that permission.
        This specific permission controls access to some advanced (and
        dangerous) features from the Download Manager that are needed by
        system applications but aren't necessary for regular applications
        that just initiate plain downloads. 
         */
        public static final int permdesc_downloadManagerAdvanced=0x7f030004;
        /**  The full sentence description for the permission to download files
    through the download manager without any notification being shown to the
    user [CHAR LIMIT=160] 
         */
        public static final int permdesc_downloadWithoutNotification=0x7f03000c;
        /**  Description for the permission to see all downloads to EXTERNAL 
         */
        public static final int permdesc_seeAllExternal=0x7f030008;
        /**  The label for the permission to access all downloads in the download
    manager, not just those owned by the calling user [CHAR LIMIT=50] 
         */
        public static final int permlab_accessAllDownloads=0x7f03000d;
        /**  The label for the permission to download files to the download cache
    that can't be automatically deleted by the download manager to free up
    space [CHAR LIMIT=50] 
         */
        public static final int permlab_downloadCacheNonPurgeable=0x7f030009;
        public static final int permlab_downloadCompletedIntent=0x7f030005;
        /**  This is the short description of a permission associated with the
        Android Download Manager. It is displayed as part of the description
        of any application that was granted that permission.
        This specific permission controls access to the Download Manager by
        applications that initiate downloads. 
         */
        public static final int permlab_downloadManager=0x7f030001;
        /**  This is the short description of a permission associated with the
        Android Download Manager. It is displayed as part of the description
        of any application that was granted that permission.
        This specific permission controls access to some advanced (and
        dangerous) features from the Download Manager that are needed by
        system applications but aren't necessary for regular applications
        that just initiate plain downloads. 
         */
        public static final int permlab_downloadManagerAdvanced=0x7f030003;
        /**  The label for the permission to download files through the download
    manager without any notification being shown to the user [CHAR LIMIT=50] 
         */
        public static final int permlab_downloadWithoutNotification=0x7f03000b;
        /**  Title for permission to see all downloads to EXTERNAL 
         */
        public static final int permlab_seeAllExternal=0x7f030007;
        /**  Text for dialog when a download exceeds the carrier-specified recommended maximum size of
        downloads over the mobile network, and the user may choose to start the download over mobile
        anyway or to queue for download to start next time a Wi-Fi connection is available [CHAR
        LIMIT=200] 
         */
        public static final int wifi_recommended_body=0x7f030018;
        /**  Title for dialog when a download exceeds the carrier-specified recommended maximum size of
        downloads over the mobile network, and the user may choose to start the download over mobile
        anyway or to queue for download to start next time a Wi-Fi connection is available [CHAR
        LIMIT=50] 
         */
        public static final int wifi_recommended_title=0x7f030017;
        /**  Text for dialog when a download exceeds the carrier-specified maximum size of downloads
        over the mobile network and Wi-Fi is required.  The user has the choice to either queue the
        download to start next time Wi-Fi is available or cancel the download altogether. [CHAR
        LIMIT=200] 
         */
        public static final int wifi_required_body=0x7f030016;
        /**  Title for dialog when a download exceeds the carrier-specified maximum size of downloads
        over the mobile network and Wi-Fi is required.  The user has the choice to either queue the
        download to start next time Wi-Fi is available or cancel the download altogether. [CHAR
        LIMIT=50] 
         */
        public static final int wifi_required_title=0x7f030015;
    }
    public static final class style {
        public static final int Theme_Translucent=0x7f040000;
    }
}
